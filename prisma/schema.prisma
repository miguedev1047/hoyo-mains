// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  OWNER
}

model User {
  id       String  @id @default(uuid())
  email    String  @unique
  name     String?
  password String
  role     Role    @default(ADMIN)
}

model Character {
  id        String  @id @unique @default(uuid())
  name      String
  element   String
  weapon    String
  stars     Int
  starsText String
  role      String
  imageUrl  String?
  public    Boolean @default(false)
  isNew     Boolean @default(false)

  createdDate DateTime @default(now())
  updatedDate DateTime @updatedAt

  materials      MaterialsByCharacter[]
  weapons        WeaponByCharacter[]
  artifacts      ArtifactByCharacter[]
  bestStats      CharacterBestStat?
  videoGuide     videoGuide?
  teams          Team[]
  talents        TalentsByCharacter[]
  passives       PassivesByCharacter[]
  constellations ConstellationsByCharacter[]
  ascensions     AscensionByCharacter[]
}

model Material {
  id String @id @default(uuid())

  imageUrl String?

  name        String
  type        String
  description String
  stars       Int
  starsText   String

  label String
  value String

  createdDate DateTime @default(now())
  updatedDate DateTime @updatedAt
}

model Weapon {
  id String @id @default(uuid())

  imageUrl String?

  name        String
  type        String
  stat        String
  description String
  stars       Int
  starsText   String

  createdDate DateTime @default(now())
  updatedDate DateTime @updatedAt
}

model Artifact {
  id String @id @unique @default(uuid())

  name      String
  stars     Int
  starsText String
  imageUrl  String?

  description String

  createdDate DateTime @default(now())
  updatedDate DateTime @updatedAt
}

model MaterialsByCharacter {
  id          String  @id @unique @default(uuid())
  item        String
  characterId String?
  order       Int     @default(0)

  createdDate DateTime @default(now())
  updatedDate DateTime @updatedAt

  character Character? @relation(fields: [characterId], references: [id])
}

model WeaponByCharacter {
  id          String  @id @unique @default(uuid())
  item        String
  characterId String?
  order       Int     @default(0)

  createdDate DateTime @default(now())
  updatedDate DateTime @updatedAt

  character Character? @relation(fields: [characterId], references: [id])
}

model ArtifactByCharacter {
  id          String  @id @unique @default(uuid())
  item        String
  characterId String?
  order       Int     @default(0)

  createdDate DateTime @default(now())
  updatedDate DateTime @updatedAt

  character Character? @relation(fields: [characterId], references: [id])
}

model CharacterBestStat {
  id          String  @id @unique @default(uuid())
  characterId String? @unique

  sandStat        String
  globetStat      String
  circletStat     String
  substatPriority String

  createdDate DateTime @default(now())
  updatedDate DateTime @updatedAt

  substats Character? @relation(fields: [characterId], references: [id])
}

model videoGuide {
  id          String  @id @unique @default(uuid())
  characterId String? @unique

  youtuberName    String
  youtuberChannel String
  embedVideoUrl   String

  createdDate DateTime @default(now())
  updatedDate DateTime @updatedAt

  videoGuide Character? @relation(fields: [characterId], references: [id])
}

model Team {
  id          String  @id @unique @default(uuid())
  characterId String?

  order Int    @default(0)
  name  String

  createdDate DateTime @default(now())
  updatedDate DateTime @updatedAt

  character  Character?        @relation(fields: [characterId], references: [id])
  characters CharacterByTeam[]
}

model CharacterByTeam {
  id          String  @id @unique @default(uuid())
  characterId String?
  teamId      String

  order Int @default(0)

  createdDate DateTime @default(now())
  updatedDate DateTime @updatedAt

  characters Team @relation(fields: [teamId], references: [id])
}

model TalentsByCharacter {
  id          String  @id @unique @default(uuid())
  characterId String?
  name        String
  description String
  imageUrl    String?

  order Int @default(0)

  createdDate DateTime @default(now())
  updatedDate DateTime @updatedAt

  talents Character? @relation(fields: [characterId], references: [id])
}

model PassivesByCharacter {
  id          String  @id @unique @default(uuid())
  characterId String?
  name        String
  description String
  imageUrl    String?

  order Int @default(0)

  createdDate DateTime @default(now())
  updatedDate DateTime @updatedAt

  passives Character? @relation(fields: [characterId], references: [id])
}

model ConstellationsByCharacter {
  id          String  @id @unique @default(uuid())
  characterId String?
  name        String
  description String
  imageUrl    String?

  order Int @default(0)

  createdDate DateTime @default(now())
  updatedDate DateTime @updatedAt

  constellations Character? @relation(fields: [characterId], references: [id])
}

model AscensionByCharacter {
  id          String  @id @unique @default(uuid())
  characterId String?

  level     Int                   @default(20)
  cost      Int                   @default(20000)
  materials MaterialByAscension[]

  createdDate DateTime @default(now())
  updatedDate DateTime @updatedAt

  ascensions Character? @relation(fields: [characterId], references: [id])
}

model MaterialByAscension {
  id          String  @id @unique @default(uuid())
  materialId  String?
  ascensionId String

  order    Int @default(0)
  quantity Int @default(0)

  createdDate DateTime @default(now())
  updatedDate DateTime @updatedAt

  ascensions AscensionByCharacter @relation(fields: [ascensionId], references: [id])
}
